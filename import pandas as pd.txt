import pandas as pd
from sqlalchemy import create_engine
import pyodbc

# define your database connection string
server = 'localhost'
database = 'test_environment'
driver = '{ODBC Driver 17 for SQL Server}'
cnxn = pyodbc.connect(f'DRIVER={driver};SERVER={server};DATABASE={database};trusted_connection=yes;')


# Define the file names of the Excel files to load into SQL Server
file_names = ['C:/Users/naguele/Documents/Dirk/1.xlsx', 'C:/Users/naguele/Documents/Dirk/2.xlsx', 'C:/Users/naguele/Documents/Dirk/3.xlsx'
              'C:/Users/naguele/Documents/Dirk/4.xlsx', 'C:/Users/naguele/Documents/Dirk/5.xlsx', 'C:/Users/naguele/Documents/Dirk/6.xlsx']

# Create an empty dictionary to store the Excel data in Pandas DataFrames
dfs = {}

# Load each Excel file into a Pandas DataFrame and store it in the dictionary with the file name as the key
for file_name in file_names:
    dfs[file_name] = pd.read_excel(file_name)




# Create a SQLAlchemy engine using the pyodbc connection
engine = create_engine('mssql+pyodbc://', creator=lambda: cnxn)

# Write each Pandas DataFrame to SQL Server as a new table with the same name as the Excel file (without the file extension)
for file_name, df in dfs.items():
    table_name = file_name.split('.')[0]  # Remove the file extension from the file name to use as the table name
    df.to_sql(table_name, engine, if_exists='replace', index=False)

# Print a message indicating that the data has been successfully loaded into SQL Server
print('Data has been successfully loaded into SQL Server!')